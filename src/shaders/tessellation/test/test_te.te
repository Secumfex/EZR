#version 430

layout(quads) in;

in vec3 tcPosition[];

out vec4 passPosition;
out vec3 tePosition;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

void main() {
	//vec4 p0 = gl_TessCoord.x * tcPosition[0];	
	//vec4 p1 = gl_TessCoord.y * tcPosition[1];
	//vec4 p2 = gl_TessCoord.z * tcPosition[2];

	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	
	// Quad w 4 points
	vec3 a = mix(tcPosition[0], tcPosition[3], gl_TessCoord.x);
	vec3 b = mix(tcPosition[1], tcPosition[2], gl_TessCoord.x);
	
	// Quad w 9 points
	//vec3 a = mix(tcPosition[0], tcPosition[2], gl_TessCoord.x);
	//vec3 b = mix(tcPosition[6], tcPosition[8], gl_TessCoord.x);
	tePosition = mix(a, b, gl_TessCoord.y);
	
	//tePosition = normalize(p0 + p1 + p2);

	passPosition = view * model * vec4(tePosition, 1);
	gl_Position = projection * passPosition;
 	}

